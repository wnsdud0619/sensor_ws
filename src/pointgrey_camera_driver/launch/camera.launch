<launch>
   <!-- Determine this using rosrun pointgrey_camera_driver list_cameras.
       If not specified, defaults to first camera found. -->
  <arg name="calib_file" default="$(find pointgrey_camera_driver)/launch/calibration_param.yaml" doc="parameter file location"/>
  <arg name="camera_name" default="camera" />
  <arg name="camera_serial" default="0" />
  <arg name="calibrated" default="1" />
  <remap from="/camera/camera_info" to="/sensing/camera/traffic_light/camera_info" />
  <remap from="/camera/image_color" to="/sensing/camera/traffic_light/image_raw" />

  <group ns="$(arg camera_name)">
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />
    <node pkg="nodelet" type="nodelet" name="camera_nodelet"
          args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
      <param name="frame_id" value="camera_TL_optical_link" />
      <param name="serial" value="$(arg camera_serial)" />

      <!-- When unspecified, the driver will use the default framerate as given by the
           camera itself. Use this parameter to override that value for cameras capable of
           other framerates. -->
      <param name="auto_exposure" value="False" />
      <param name="exposure" value="1.0" />
      <param name="auto_packet_size" value="False" />
      <param name="packet_size" value="9000" />
      <param name="packet_delay" value="10" />
      <param name="frame_rate" value="10" />
      <param name="auto_white_balance" value="False" />
      <param name="white_balance_red" value="700" />
      <param name="white_balance_blue" value="800" /> 
	

      <!-- Use the camera_calibration package to create this file -->
      <param name="camera_info_url" if="$(arg calibrated)"
             value="file://$(arg calib_file)" />
    </node>

    <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
    </node>
  </group>
  <node name="tl_roi_img_pub" pkg="tl_roi_img_pub" type="tl_roi_img_pub.py" output="screen"/>
</launch>
